{"remainingRequest":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue","mtime":1641178878145},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KY29uc3QgZWNoYXJ0cyA9IHJlcXVpcmUoJ2VjaGFydHMnKTsKCmNvbnN0IGRldmljZXNpZCA9ICc2MjQ1MTk4NTAnOyAvLyDorr7lpIdpZAoKY29uc3QgYXBpa2V5ID0gJzJvYzY9MFhnTnNLRlc4WFZzR2NwU0ptZGxMMD0nOyAvLwoKY29uc3QgYXBpID0gbmV3IE9uZU5ldEFwaShhcGlrZXkpOwpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPlua4qeW6pueahOaVsOaNruiKgueCuQogICAgdGhpcy5nZXRDaGFydHMoJ3RlbXBlcmF0dXJlJywgJ+a4qeW6picsICcjRjYwJywgJ21haW4nKTsKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmxhZzogdHJ1ZSwKICAgICAgZmxhZzE6IHRydWUsCiAgICAgIHZhbHVlOiAnMjAyMS0wNS0wMScsCiAgICAgIGRhdGFOdW06ICcnLAogICAgICBsaW1pdDogNjAwMCwKICAgICAgc3RhcnRUaW1lOiAnMjAyMC0xMi0zMFQwODowMDozNScsCiAgICAgIGRhdGFMOiB7fSwKICAgICAgZGF0YUg6IHt9LAogICAgICBkYXRhVDoge30sCiAgICAgIHBhdHRlcm46IC9eKFsxLTldWzAtOV18WzEtMl1bMC05XVswLTldfFszXVswLTJdWzAtOV18MzMwKSQvCiAgICB9OwogIH0sCgogIG1vdW50ZWQoKSB7fSwKCiAgbWV0aG9kczogewogICAgdGFiQ2xpY2sodGl0bGUpIHsKICAgICAgaWYgKHRpdGxlID09PSAxICYmIHRoaXMuZmxhZykgewogICAgICAgIHRoaXMuZmxhZyA9ICF0aGlzLmZsYWc7CiAgICAgICAgdGhpcy5nZXRDaGFydHMoJ2h1bWlkaXR5JywgJ+a5v+W6picsICcjMWJlMGUwJywgJ21haW4xJyk7CiAgICAgIH0gZWxzZSBpZiAodGl0bGUgPT09IDIgJiYgdGhpcy5mbGFnMSkgewogICAgICAgIHRoaXMuZmxhZzEgPSAhdGhpcy5mbGFnMTsgLy8gLy/ojrflj5blhYnnhafluqbnmoTmlbDmja7oioLngrkKCiAgICAgICAgdGhpcy5nZXRDaGFydHMoJ2lsbHVtaW5hdGlvbicsICflhYnnhaflvLrluqYnLCAnIzE5YzUwOScsICdtYWluMicpOwogICAgICB9CiAgICB9LAoKICAgIHNlbGVjdERhdGEoKSB7CiAgICAgIC8vIOafpeivouaMiemSrgogICAgICBjb25zdCB0aGF0ID0gdGhpczsKICAgICAgY29uc3QgZGF0YU51bXMgPSBOdW1iZXIodGhhdC5kYXRhTnVtKTsKICAgICAgdGhhdC5saW1pdCA9IGRhdGFOdW1zOwogICAgICB0aGF0LmdldENoYXJ0cygndGVtcGVyYXR1cmUnLCAn5rip5bqmJywgJyNGNjAnLCAnbWFpbicpOwogICAgICB0aGF0LmdldENoYXJ0cygnaHVtaWRpdHknLCAn5rm/5bqmJywgJyMxYmUwZTAnLCAnbWFpbjEnKTsKICAgICAgdGhhdC5nZXRDaGFydHMoJ2lsbHVtaW5hdGlvbicsICflhYnnhaflvLrluqYnLCAnIzE5YzUwOScsICdtYWluMicpOwogICAgfSwKCiAgICBnZXRDaGFydHMoaWQsIHRpdGxlLCBjb2xvciwgd2hvKSB7CiAgICAgIC8vIOWunuS+i+WMluWbvuihqAogICAgICBjb25zdCB0aGF0ID0gdGhpczsKICAgICAgYXBpLmdldERhdGFQb2ludHMoZGV2aWNlc2lkLCB7CiAgICAgICAgZGF0YXN0cmVhbV9pZDogaWQsCiAgICAgICAgc3RhcnQ6IHRoYXQuc3RhcnRUaW1lLAogICAgICAgIGxpbWl0OiB0aGF0LmxpbWl0CiAgICAgIH0pLmRvbmUoZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygnYXBp6LCD55So5a6M5oiQ77yM5pyN5Yqh5Zmo6L+U5ZueZGF0YeS4uu+8micsIGRhdGEpOwogICAgICAgIGNvbnN0IHRkYXRhdGltZSA9IFtdOwogICAgICAgIGNvbnN0IHR2YWx1ZSA9IFtdOwogICAgICAgIGNvbnN0IGRhdGFzID0gZGF0YS5kYXRhLmRhdGFzdHJlYW1zWzBdLmRhdGFwb2ludHM7CgogICAgICAgIGZvciAoY29uc3QgaSBpbiBkYXRhcykgewogICAgICAgICAgZGF0YXNbaV0uYXQgPSBkYXRhc1tpXS5hdC5zbGljZSg1LCAtNCk7IC8vIOWOu+aOieaXtumXtO+8jOS/neeVmeaXpeacnwoKICAgICAgICAgIHRkYXRhdGltZS5wdXNoKGRhdGFzW2ldLmF0KTsKICAgICAgICAgIHR2YWx1ZS5wdXNoKGRhdGFzW2ldLnZhbHVlKTsKICAgICAgICB9IC8vIGNvbnN0IGVjaGFydHMgPSByZXF1aXJlKCJlY2hhcnRzIik7CiAgICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwoKCiAgICAgICAgY29uc3QgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh3aG8pKTsgLy8g57uY5Yi25Zu+6KGoCgogICAgICAgIGNvbnN0IG9wdGlvbiA9IHsKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBkYXRhOiBbdGl0bGVdCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICAvLyDliqjmgIHnsbvlnovliIfmjaIs5YiH5o2i5Zu+6KGoCiAgICAgICAgICAgICAgbWFnaWNUeXBlOiB7CiAgICAgICAgICAgICAgICB0eXBlOiBbJ2xpbmUnLCAnYmFyJ10KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIC8vIOaVsOaNruinhuWbvuW3peWFt++8jOWPr+S7peWxleeOsOW9k+WJjeWbvuihqOaJgOeUqOeahOaVsOaNru+8jOe8lui+keWQjuWPr+S7peWKqOaAgeabtOaWsOOAggogICAgICAgICAgICAgIGRhdGFWaWV3OiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgLy8g5piv5ZCm5pi+56S6IOaVsOaNruekuuWbvgogICAgICAgICAgICAgICAgcmVhZE9ubHk6IGZhbHNlIC8vIOaYr+WQpiDnm7TmjqXlj6/ku6XnvJbovpHmlbDmja7jgIIKCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAvLyDkv53lrZjkuLrlm77niYfnmoTphY3nva4KICAgICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgLy8g6YWN572u6aG56L+Y5Y6fCiAgICAgICAgICAgICAgcmVzdG9yZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHhBeGlzOiBbewogICAgICAgICAgICBkYXRhOiB0ZGF0YXRpbWUsCiAgICAgICAgICAgIC8vIOWtl+aVsOi2hei/h27kuKrml7bnnIHnlaUKICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAodmFsdWUsIGluZGV4KSB7CiAgICAgICAgICAgICAgICBjb25zdCB2ID0gdmFsdWUuc3Vic3RyaW5nKDAsIDUpICsgJy4uLic7CiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoID4gNSA/IHYgOiB2YWx1ZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgeUF4aXM6IHt9LAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICBuYW1lOiB0aXRsZSwKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiB0dmFsdWUsCiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIC8vIOWbvuW9oueahOminOiJsuOAgum7mOiupOaMh+WQkeWFqOWxgOeahG9wdGlvbi5jb2xvcgogICAgICAgICAgICAgIGNvbG9yOiBjb2xvcgogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH07CgogICAgICAgIGlmIChpZCA9PT0gJ3RlbXBlcmF0dXJlJykgewogICAgICAgICAgdGhhdC5kYXRhVCA9IG9wdGlvbjsKICAgICAgICB9CgogICAgICAgIGlmIChpZCA9PT0gJ2h1bWlkaXR5JykgewogICAgICAgICAgdGhhdC5kYXRhSCA9IG9wdGlvbjsKICAgICAgICB9CgogICAgICAgIGlmIChpZCA9PT0gJ2lsbHVtaW5hdGlvbicpIHsKICAgICAgICAgIHRoYXQuZGF0YUwgPSBvcHRpb247CiAgICAgICAgfQoKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICB9KTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["History.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"nullview\"></div>\n    <van-form>\n      <van-field\n        v-model=\"dataNum\"\n        center\n        label=\"数据数量\"\n        clearable\n        placeholder=\"1 ~ 330\"\n        :rules=\"[{ pattern, message: '请输入正确的数字', trigger: 'onBlur' }]\"\n      >\r\n\t\t\t\t<template #button>\r\n\t\t\t\t\t<van-button size=\"small\" type=\"primary\" @click=\"selectData\"\r\n\t\t\t\t\t\t>查询</van-button\r\n\t\t\t\t\t>\r\n\t\t\t\t</template>\n      </van-field>    \n    </van-form>\n    <van-tabs color=\"#888686\" @click=\"tabClick\">\n      <van-tab title=\"温度\">\n        <div class=\"line\">\n          <div id=\"main\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"湿度\">\n        <div class=\"line\">\n          <div id=\"main1\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"光照强度\">\n        <div class=\"line\">\n          <div id=\"main2\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n    </van-tabs>\n  </div>\n</template>\n\n<script>\nconst echarts = require('echarts');\nconst devicesid = '624519850'; // 设备id\nconst apikey = '2oc6=0XgNsKFW8XVsGcpSJmdlL0='; //\nconst api = new OneNetApi(apikey);\n\nexport default {\n  created() {\n    // 获取温度的数据节点\n    this.getCharts('temperature', '温度', '#F60', 'main');\n  },\n  data() {\n    return {\n      flag: true,\n      flag1: true,\n      value: '2021-05-01',\n      dataNum: '',\n      limit: 6000,\n      startTime: '2020-12-30T08:00:35',\n      dataL: {},\n      dataH: {},\n      dataT: {},\n      pattern: /^([1-9][0-9]|[1-2][0-9][0-9]|[3][0-2][0-9]|330)$/\n    };\n  },\n  mounted() {},\n  methods: {\n    tabClick(title) {\n      if (title === 1 && this.flag) {\n        this.flag = !this.flag;\n        this.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      } else if (title === 2 && this.flag1) {\n        this.flag1 = !this.flag1;\n        // //获取光照度的数据节点\n        this.getCharts('illumination', '光照强度', '#19c509', 'main2');\n      }\n    },\n    selectData() {\n      // 查询按钮\n      const that = this;\n      const dataNums = Number(that.dataNum);\n      that.limit = dataNums;\n      that.getCharts('temperature', '温度', '#F60', 'main');\n      that.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      that.getCharts('illumination', '光照强度', '#19c509', 'main2');\n    },\n    getCharts(id, title, color, who) {\n      // 实例化图表\n      const that = this;\n      api\n        .getDataPoints(devicesid, {\n          datastream_id: id,\n          start: that.startTime,\n          limit: that.limit\n        })\n        .done(function(data) {\n          console.log('api调用完成，服务器返回data为：', data);\n          const tdatatime = [];\n          const tvalue = [];\n          const datas = data.data.datastreams[0].datapoints;\n          for (const i in datas) {\n            datas[i].at = datas[i].at.slice(5, -4); // 去掉时间，保留日期\n            tdatatime.push(datas[i].at);\n            tvalue.push(datas[i].value);\n          }\n          // const echarts = require(\"echarts\");\n          // 基于准备好的dom，初始化echarts实例\n          const myChart = echarts.init(document.getElementById(who));\n          // 绘制图表\n          const option = {\n            legend: {\n              data: [title]\n            },\n            tooltip: {},\n            toolbox: {\n              feature: {\n                // 动态类型切换,切换图表\n                magicType: {\n                  type: ['line', 'bar']\n                },\n                // 数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。\n                dataView: {\n                  show: true, // 是否显示 数据示图\n                  readOnly: false // 是否 直接可以编辑数据。\n                },\n                // 保存为图片的配置\n                saveAsImage: {\n                  show: true\n                },\n                // 配置项还原\n                restore: { show: true }\n              }\n            },\n            xAxis: [\n              {\n                data: tdatatime,\n                // 字数超过n个时省略\n                axisLabel: {\n                  formatter: function(value, index) {\n                    const v = value.substring(0, 5) + '...';\n                    return value.length > 5 ? v : value;\n                  }\n                }\n              }\n            ],\n            yAxis: {},\n            series: [\n              {\n                name: title,\n                type: 'line',\n                data: tvalue,\n                itemStyle: {\n                  // 图形的颜色。默认指向全局的option.color\n                  color: color\n                }\n              }\n            ]\n          };\n          if (id === 'temperature') {\n            that.dataT = option;\n          }\n          if (id === 'humidity') {\n            that.dataH = option;\n          }\n          if (id === 'illumination') {\n            that.dataL = option;\n          }\n          myChart.setOption(option);\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  width: 100%;\n  height: 100%;\n  .nullview {\n    width: 100%;\n    height: 50px;\n  }\n  .line {\n    width: 99%;\n    height: 400px;\n    margin-top: 20px;\n    // color: #888686;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}