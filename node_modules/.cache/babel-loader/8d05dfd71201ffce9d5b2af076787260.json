{"remainingRequest":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue","mtime":1641373803164},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIGVjaGFydHMgPSByZXF1aXJlKCdlY2hhcnRzJyk7IC8vIOWKoOi9vWVjaGFydHMKCgp2YXIgZGV2aWNlc2lkID0gJzYyNDUxOTg1MCc7IC8vIOiuvuWkh2lkCgp2YXIgYXBpa2V5ID0gJzJvYzY9MFhnTnNLRlc4WFZzR2NwU0ptZGxMMD0nOyAvLyBvbmVOZXRBcGnnmoRrZXkKCnZhciBhcGkgPSBuZXcgT25lTmV0QXBpKGFwaWtleSk7IC8v6K+75Y+W6K6+5aSH6I635Y+W5aSa5Liq5pWw5o2u5rWB44CCCgpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluaVsOaNruiKgueCue+8jOmAmui/h+e7hOS7tmlk5p2l6ZSB5a6a6I635Y+W5ZOq5Liq5pWw5o2u6aG5CiAgICB0aGlzLmdldENoYXJ0cygndGVtcGVyYXR1cmUnLCAn5rip5bqmJywgJyNGNjAnLCAnbWFpbicpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZsYWc6IHRydWUsCiAgICAgIGZsYWcxOiB0cnVlLAogICAgICB2YWx1ZTogJzIwMjEtMDUtMDEnLAogICAgICBkYXRhTnVtOiAnJywKICAgICAgbGltaXQ6IDYwMDAsCiAgICAgIHN0YXJ0VGltZTogJzIwMjAtMTItMzBUMDg6MDA6MzUnLAogICAgICBkYXRhTDoge30sCiAgICAgIGRhdGFIOiB7fSwKICAgICAgZGF0YVQ6IHt9LAogICAgICBwYXR0ZXJuOiAvXihbMS05XVswLTldfFsxLTJdWzAtOV1bMC05XXxbM11bMC0yXVswLTldfDMzMCkkLwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSwKICBtZXRob2RzOiB7CiAgICAvLyDorr7nva7lk43lupTnu4Tku7blh73mlbDvvIzliKTmlq3lvZPliY3mmK/pgInmi6nmoLnmja7lk6rkuKrlj4LmlbDot5HmlbDmja7lm77jgIIKICAgIHRhYkNsaWNrOiBmdW5jdGlvbiB0YWJDbGljayh0aXRsZSkgewogICAgICBpZiAodGl0bGUgPT09IDEgJiYgdGhpcy5mbGFnKSB7CiAgICAgICAgdGhpcy5mbGFnID0gIXRoaXMuZmxhZzsKICAgICAgICB0aGlzLmdldENoYXJ0cygnaHVtaWRpdHknLCAn5rm/5bqmJywgJyMxYmUwZTAnLCAnbWFpbjEnKTsKICAgICAgfSBlbHNlIGlmICh0aXRsZSA9PT0gMiAmJiB0aGlzLmZsYWcxKSB7CiAgICAgICAgdGhpcy5mbGFnMSA9ICF0aGlzLmZsYWcxOyAvLyDojrflj5blhYnnhafluqbnmoTmlbDmja7oioLngrkKCiAgICAgICAgdGhpcy5nZXRDaGFydHMoJ2lsbHVtaW5hdGlvbicsICflhYnnhaflvLrluqYnLCAnIzE5YzUwOScsICdtYWluMicpOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0RGF0YTogZnVuY3Rpb24gc2VsZWN0RGF0YSgpIHsKICAgICAgLy8g5p+l6K+i5oyJ6ZKuCiAgICAgIHZhciB0aGF0ID0gdGhpczsKICAgICAgdmFyIGRhdGFOdW1zID0gTnVtYmVyKHRoYXQuZGF0YU51bSk7CiAgICAgIHRoYXQubGltaXQgPSBkYXRhTnVtczsKICAgICAgdGhhdC5nZXRDaGFydHMoJ3RlbXBlcmF0dXJlJywgJ+a4qeW6picsICcjRjYwJywgJ21haW4nKTsKICAgICAgdGhhdC5nZXRDaGFydHMoJ2h1bWlkaXR5JywgJ+a5v+W6picsICcjMWJlMGUwJywgJ21haW4xJyk7CiAgICAgIHRoYXQuZ2V0Q2hhcnRzKCdpbGx1bWluYXRpb24nLCAn5YWJ54Wn5by65bqmJywgJyMxOWM1MDknLCAnbWFpbjInKTsKICAgIH0sCiAgICBnZXRDaGFydHM6IGZ1bmN0aW9uIGdldENoYXJ0cyhpZCwgdGl0bGUsIGNvbG9yLCB3aG8pIHsKICAgICAgLy8g5a6e5L6L5YyW5Zu+6KGoCiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8g6YCa6L+Hb25lTmV0QXBp6I635Y+W5pWw5o2uCgogICAgICBhcGkuZ2V0RGF0YVBvaW50cyhkZXZpY2VzaWQsIHsKICAgICAgICBkYXRhc3RyZWFtX2lkOiBpZCwKICAgICAgICBzdGFydDogdGhhdC5zdGFydFRpbWUsCiAgICAgICAgbGltaXQ6IHRoYXQubGltaXQKICAgICAgfSkuZG9uZShmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGNvbnNvbGUubG9nKCdhcGnosIPnlKjlrozmiJDvvIzmnI3liqHlmajov5Tlm55kYXRh5Li677yaJywgZGF0YSk7IC8vIOWvueaVsOaNrui/m+ihjOWkhOeQhgoKICAgICAgICB2YXIgdGRhdGF0aW1lID0gW107CiAgICAgICAgdmFyIHR2YWx1ZSA9IFtdOwogICAgICAgIHZhciBkYXRhcyA9IGRhdGEuZGF0YS5kYXRhc3RyZWFtc1swXS5kYXRhcG9pbnRzOwoKICAgICAgICBmb3IgKHZhciBpIGluIGRhdGFzKSB7CiAgICAgICAgICBkYXRhc1tpXS5hdCA9IGRhdGFzW2ldLmF0LnNsaWNlKDUsIC00KTsgLy8g5Y675o6J5pe26Ze077yM5L+d55WZ5pel5pyfCgogICAgICAgICAgdGRhdGF0aW1lLnB1c2goZGF0YXNbaV0uYXQpOwogICAgICAgICAgdHZhbHVlLnB1c2goZGF0YXNbaV0udmFsdWUpOwogICAgICAgIH0gLy8gY29uc3QgZWNoYXJ0cyA9IHJlcXVpcmUoImVjaGFydHMiKTsKICAgICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCgoKICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh3aG8pKTsgLy8g5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2u44CCCgogICAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgZGF0YTogW3RpdGxlXQogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgLy8g5Yqo5oCB57G75Z6L5YiH5o2iLOWIh+aNouWbvuihqO+8jOaIkei/memHjOiuvue9ruebtOaWueWbvuWSjOaKmOe6v+WbvuOAggogICAgICAgICAgICAgIG1hZ2ljVHlwZTogewogICAgICAgICAgICAgICAgdHlwZTogWydsaW5lJywgJ2JhciddCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAvLyDmlbDmja7op4blm77lt6XlhbfvvIzlj6/ku6XlsZXnjrDlvZPliY3lm77ooajmiYDnlKjnmoTmlbDmja7vvIznvJbovpHlkI7lj6/ku6XliqjmgIHmm7TmlrDjgIIKICAgICAgICAgICAgICBkYXRhVmlldzogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIC8vIOaYr+WQpuaYvuekuiDmlbDmja7npLrlm74KICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZSAvLyDmmK/lkKYg55u05o6l5Y+v5Lul57yW6L6R5pWw5o2u44CCCgogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgLy8g5L+d5a2Y5Li65Zu+54mH55qE6YWN572uCiAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIC8vIOmFjee9rumhuei/mOWOnwogICAgICAgICAgICAgIHJlc3RvcmU6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogW3sKICAgICAgICAgICAgZGF0YTogdGRhdGF0aW1lLAogICAgICAgICAgICAvLyDlrZfmlbDotoXov4du5Liq5pe255yB55WlCiAgICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHZhbHVlLCBpbmRleCkgewogICAgICAgICAgICAgICAgdmFyIHYgPSB2YWx1ZS5zdWJzdHJpbmcoMCwgNSkgKyAnLi4uJzsKICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5sZW5ndGggPiA1ID8gdiA6IHZhbHVlOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfV0sCiAgICAgICAgICB5QXhpczoge30sCiAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgIG5hbWU6IHRpdGxlLAogICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgIGRhdGE6IHR2YWx1ZSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgLy8g5Zu+5b2i55qE6aKc6Imy44CC6buY6K6k5oyH5ZCR5YWo5bGA55qEb3B0aW9uLmNvbG9yCiAgICAgICAgICAgICAgY29sb3I6IGNvbG9yCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfTsgLy8g5qC55o2u5LiN5ZCM55qE6YCJ6aG55p2l6K6+572u5LiN5ZCM55qE5pWw5o2u6aG5CgogICAgICAgIGlmIChpZCA9PT0gJ3RlbXBlcmF0dXJlJykgewogICAgICAgICAgdGhhdC5kYXRhVCA9IG9wdGlvbjsKICAgICAgICB9CgogICAgICAgIGlmIChpZCA9PT0gJ2h1bWlkaXR5JykgewogICAgICAgICAgdGhhdC5kYXRhSCA9IG9wdGlvbjsKICAgICAgICB9CgogICAgICAgIGlmIChpZCA9PT0gJ2lsbHVtaW5hdGlvbicpIHsKICAgICAgICAgIHRoYXQuZGF0YUwgPSBvcHRpb247CiAgICAgICAgfSAvLyDnu5jliLblm77ooagKCgogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["History.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"nullview\"></div>\n    <van-form>\n      <van-field\n        v-model=\"dataNum\"\n        center\n        label=\"数据数量\"\n        clearable\n        placeholder=\"1 ~ 330\"\n        :rules=\"[{ pattern, message: '请输入正确的数字', trigger: 'onBlur' }]\"\n      >\r\n\t\t\t\t<template #button>\r\n\t\t\t\t\t<van-button size=\"small\" type=\"primary\" @click=\"selectData\"\r\n\t\t\t\t\t\t>查询</van-button\r\n\t\t\t\t\t>\r\n\t\t\t\t</template>\n      </van-field>    \n    </van-form>\n    <van-tabs color=\"#888686\" @click=\"tabClick\">\n      <van-tab title=\"温度\">\n        <div class=\"line\">\n          <div id=\"main\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"湿度\">\n        <div class=\"line\">\n          <div id=\"main1\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"光照强度\">\n        <div class=\"line\">\n          <div id=\"main2\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n    </van-tabs>\n  </div>\n</template>\n\n<script>\nlet echarts = require('echarts'); // 加载echarts\nlet devicesid = '624519850'; // 设备id\nlet apikey = '2oc6=0XgNsKFW8XVsGcpSJmdlL0='; // oneNetApi的key\nlet api = new OneNetApi(apikey); //读取设备获取多个数据流。\n\nexport default {\n  created() {\n    // 获取数据节点，通过组件id来锁定获取哪个数据项\n    this.getCharts('temperature', '温度', '#F60', 'main');\n  },\n  data() {\n    return {\n      flag: true,\n      flag1: true,\n      value: '2021-05-01',\n      dataNum: '',\n      limit: 6000,\n      startTime: '2020-12-30T08:00:35',\n      dataL: {},\n      dataH: {},\n      dataT: {},\n      pattern: /^([1-9][0-9]|[1-2][0-9][0-9]|[3][0-2][0-9]|330)$/\n    };\n  },\n  mounted() {},\n  methods: {\r\n\t\t// 设置响应组件函数，判断当前是选择根据哪个参数跑数据图。\n    tabClick(title) {\n      if (title === 1 && this.flag) {\n        this.flag = !this.flag;\n        this.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      } else if (title === 2 && this.flag1) {\n        this.flag1 = !this.flag1;\n        // 获取光照度的数据节点\n        this.getCharts('illumination', '光照强度', '#19c509', 'main2');\n      }\n    },\n    selectData() {\n      // 查询按钮\n      const that = this;\n      const dataNums = Number(that.dataNum);\n      that.limit = dataNums;\n      that.getCharts('temperature', '温度', '#F60', 'main');\n      that.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      that.getCharts('illumination', '光照强度', '#19c509', 'main2');\n    },\n    getCharts(id, title, color, who) {\n      // 实例化图表\n      const that = this;\r\n\t\t\t// 通过oneNetApi获取数据\n      api.getDataPoints(devicesid, {\n          datastream_id: id,\n          start: that.startTime,\n          limit: that.limit\n        })\n        .done(function(data) {\n          console.log('api调用完成，服务器返回data为：', data);\r\n\t\t\t\t\t// 对数据进行处理\n          const tdatatime = [];\n          const tvalue = [];\n          const datas = data.data.datastreams[0].datapoints;\n          for (const i in datas) {\n            datas[i].at = datas[i].at.slice(5, -4); // 去掉时间，保留日期\n            tdatatime.push(datas[i].at);\n            tvalue.push(datas[i].value);\n          }\n          // const echarts = require(\"echarts\");\n          // 基于准备好的dom，初始化echarts实例\n          const myChart = echarts.init(document.getElementById(who));\n          // 指定图表的配置项和数据。\n          const option = {\n            legend: {\n              data: [title]\n            },\n            tooltip: {},\n            toolbox: {\n              feature: {\n                // 动态类型切换,切换图表，我这里设置直方图和折线图。\n                magicType: {\n                  type: ['line', 'bar']\n                },\n                // 数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。\n                dataView: {\n                  show: true, // 是否显示 数据示图\n                  readOnly: false // 是否 直接可以编辑数据。\n                },\n                // 保存为图片的配置\n                saveAsImage: {\n                  show: true\n                },\n                // 配置项还原\n                restore: { show: true }\n              }\n            },\n            xAxis: [\n              {\n                data: tdatatime,\n                // 字数超过n个时省略\n                axisLabel: {\n                  formatter: function(value, index) {\n                    const v = value.substring(0, 5) + '...';\n                    return value.length > 5 ? v : value;\n                  }\n                }\n              }\n            ],\n            yAxis: {},\n            series: [\n              {\n                name: title,\n                type: 'line',\n                data: tvalue,\n                itemStyle: {\n                  // 图形的颜色。默认指向全局的option.color\n                  color: color\n                }\n              }\n            ]\n          };\r\n\t\t\t\t\t// 根据不同的选项来设置不同的数据项\n          if (id === 'temperature') {\n            that.dataT = option;\n          }\n          if (id === 'humidity') {\n            that.dataH = option;\n          }\n          if (id === 'illumination') {\n            that.dataL = option;\n          }\r\n\t\t\t\t\t// 绘制图表\n          myChart.setOption(option);\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  width: 100%;\n  height: 100%;\n  .nullview {\n    width: 100%;\n    height: 50px;\n  }\n  .line {\n    width: 99%;\n    height: 400px;\n    margin-top: 20px;\n    // color: #888686;\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}