{"remainingRequest":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\History.vue","mtime":1641373803164},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmxldCBlY2hhcnRzID0gcmVxdWlyZSgnZWNoYXJ0cycpOyAvLyDliqDovb1lY2hhcnRzCmxldCBkZXZpY2VzaWQgPSAnNjI0NTE5ODUwJzsgLy8g6K6+5aSHaWQKbGV0IGFwaWtleSA9ICcyb2M2PTBYZ05zS0ZXOFhWc0djcFNKbWRsTDA9JzsgLy8gb25lTmV0QXBp55qEa2V5CmxldCBhcGkgPSBuZXcgT25lTmV0QXBpKGFwaWtleSk7IC8v6K+75Y+W6K6+5aSH6I635Y+W5aSa5Liq5pWw5o2u5rWB44CCCgpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluaVsOaNruiKgueCue+8jOmAmui/h+e7hOS7tmlk5p2l6ZSB5a6a6I635Y+W5ZOq5Liq5pWw5o2u6aG5CiAgICB0aGlzLmdldENoYXJ0cygndGVtcGVyYXR1cmUnLCAn5rip5bqmJywgJyNGNjAnLCAnbWFpbicpOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZsYWc6IHRydWUsCiAgICAgIGZsYWcxOiB0cnVlLAogICAgICB2YWx1ZTogJzIwMjEtMDUtMDEnLAogICAgICBkYXRhTnVtOiAnJywKICAgICAgbGltaXQ6IDYwMDAsCiAgICAgIHN0YXJ0VGltZTogJzIwMjAtMTItMzBUMDg6MDA6MzUnLAogICAgICBkYXRhTDoge30sCiAgICAgIGRhdGFIOiB7fSwKICAgICAgZGF0YVQ6IHt9LAogICAgICBwYXR0ZXJuOiAvXihbMS05XVswLTldfFsxLTJdWzAtOV1bMC05XXxbM11bMC0yXVswLTldfDMzMCkkLwogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7fSwKICBtZXRob2RzOiB7DQoJCS8vIOiuvue9ruWTjeW6lOe7hOS7tuWHveaVsO+8jOWIpOaWreW9k+WJjeaYr+mAieaLqeagueaNruWTquS4quWPguaVsOi3keaVsOaNruWbvuOAggogICAgdGFiQ2xpY2sodGl0bGUpIHsKICAgICAgaWYgKHRpdGxlID09PSAxICYmIHRoaXMuZmxhZykgewogICAgICAgIHRoaXMuZmxhZyA9ICF0aGlzLmZsYWc7CiAgICAgICAgdGhpcy5nZXRDaGFydHMoJ2h1bWlkaXR5JywgJ+a5v+W6picsICcjMWJlMGUwJywgJ21haW4xJyk7CiAgICAgIH0gZWxzZSBpZiAodGl0bGUgPT09IDIgJiYgdGhpcy5mbGFnMSkgewogICAgICAgIHRoaXMuZmxhZzEgPSAhdGhpcy5mbGFnMTsKICAgICAgICAvLyDojrflj5blhYnnhafluqbnmoTmlbDmja7oioLngrkKICAgICAgICB0aGlzLmdldENoYXJ0cygnaWxsdW1pbmF0aW9uJywgJ+WFieeFp+W8uuW6picsICcjMTljNTA5JywgJ21haW4yJyk7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3REYXRhKCkgewogICAgICAvLyDmn6Xor6LmjInpkq4KICAgICAgY29uc3QgdGhhdCA9IHRoaXM7CiAgICAgIGNvbnN0IGRhdGFOdW1zID0gTnVtYmVyKHRoYXQuZGF0YU51bSk7CiAgICAgIHRoYXQubGltaXQgPSBkYXRhTnVtczsKICAgICAgdGhhdC5nZXRDaGFydHMoJ3RlbXBlcmF0dXJlJywgJ+a4qeW6picsICcjRjYwJywgJ21haW4nKTsKICAgICAgdGhhdC5nZXRDaGFydHMoJ2h1bWlkaXR5JywgJ+a5v+W6picsICcjMWJlMGUwJywgJ21haW4xJyk7CiAgICAgIHRoYXQuZ2V0Q2hhcnRzKCdpbGx1bWluYXRpb24nLCAn5YWJ54Wn5by65bqmJywgJyMxOWM1MDknLCAnbWFpbjInKTsKICAgIH0sCiAgICBnZXRDaGFydHMoaWQsIHRpdGxlLCBjb2xvciwgd2hvKSB7CiAgICAgIC8vIOWunuS+i+WMluWbvuihqAogICAgICBjb25zdCB0aGF0ID0gdGhpczsNCgkJCS8vIOmAmui/h29uZU5ldEFwaeiOt+WPluaVsOaNrgogICAgICBhcGkuZ2V0RGF0YVBvaW50cyhkZXZpY2VzaWQsIHsKICAgICAgICAgIGRhdGFzdHJlYW1faWQ6IGlkLAogICAgICAgICAgc3RhcnQ6IHRoYXQuc3RhcnRUaW1lLAogICAgICAgICAgbGltaXQ6IHRoYXQubGltaXQKICAgICAgICB9KQogICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdhcGnosIPnlKjlrozmiJDvvIzmnI3liqHlmajov5Tlm55kYXRh5Li677yaJywgZGF0YSk7DQoJCQkJCS8vIOWvueaVsOaNrui/m+ihjOWkhOeQhgogICAgICAgICAgY29uc3QgdGRhdGF0aW1lID0gW107CiAgICAgICAgICBjb25zdCB0dmFsdWUgPSBbXTsKICAgICAgICAgIGNvbnN0IGRhdGFzID0gZGF0YS5kYXRhLmRhdGFzdHJlYW1zWzBdLmRhdGFwb2ludHM7CiAgICAgICAgICBmb3IgKGNvbnN0IGkgaW4gZGF0YXMpIHsKICAgICAgICAgICAgZGF0YXNbaV0uYXQgPSBkYXRhc1tpXS5hdC5zbGljZSg1LCAtNCk7IC8vIOWOu+aOieaXtumXtO+8jOS/neeVmeaXpeacnwogICAgICAgICAgICB0ZGF0YXRpbWUucHVzaChkYXRhc1tpXS5hdCk7CiAgICAgICAgICAgIHR2YWx1ZS5wdXNoKGRhdGFzW2ldLnZhbHVlKTsKICAgICAgICAgIH0KICAgICAgICAgIC8vIGNvbnN0IGVjaGFydHMgPSByZXF1aXJlKCJlY2hhcnRzIik7CiAgICAgICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LCiAgICAgICAgICBjb25zdCBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHdobykpOwogICAgICAgICAgLy8g5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2u44CCCiAgICAgICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgIGRhdGE6IFt0aXRsZV0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgICAvLyDliqjmgIHnsbvlnovliIfmjaIs5YiH5o2i5Zu+6KGo77yM5oiR6L+Z6YeM6K6+572u55u05pa55Zu+5ZKM5oqY57q/5Zu+44CCCiAgICAgICAgICAgICAgICBtYWdpY1R5cGU6IHsKICAgICAgICAgICAgICAgICAgdHlwZTogWydsaW5lJywgJ2JhciddCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgLy8g5pWw5o2u6KeG5Zu+5bel5YW377yM5Y+v5Lul5bGV546w5b2T5YmN5Zu+6KGo5omA55So55qE5pWw5o2u77yM57yW6L6R5ZCO5Y+v5Lul5Yqo5oCB5pu05paw44CCCiAgICAgICAgICAgICAgICBkYXRhVmlldzogewogICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLCAvLyDmmK/lkKbmmL7npLog5pWw5o2u56S65Zu+CiAgICAgICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZSAvLyDmmK/lkKYg55u05o6l5Y+v5Lul57yW6L6R5pWw5o2u44CCCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgLy8g5L+d5a2Y5Li65Zu+54mH55qE6YWN572uCiAgICAgICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgLy8g6YWN572u6aG56L+Y5Y6fCiAgICAgICAgICAgICAgICByZXN0b3JlOiB7IHNob3c6IHRydWUgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeEF4aXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkYXRhOiB0ZGF0YXRpbWUsCiAgICAgICAgICAgICAgICAvLyDlrZfmlbDotoXov4du5Liq5pe255yB55WlCiAgICAgICAgICAgICAgICBheGlzTGFiZWw6IHsKICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbih2YWx1ZSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCB2ID0gdmFsdWUuc3Vic3RyaW5nKDAsIDUpICsgJy4uLic7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA+IDUgPyB2IDogdmFsdWU7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHlBeGlzOiB7fSwKICAgICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogdGl0bGUsCiAgICAgICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgICAgICBkYXRhOiB0dmFsdWUsCiAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgLy8g5Zu+5b2i55qE6aKc6Imy44CC6buY6K6k5oyH5ZCR5YWo5bGA55qEb3B0aW9uLmNvbG9yCiAgICAgICAgICAgICAgICAgIGNvbG9yOiBjb2xvcgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXQogICAgICAgICAgfTsNCgkJCQkJLy8g5qC55o2u5LiN5ZCM55qE6YCJ6aG55p2l6K6+572u5LiN5ZCM55qE5pWw5o2u6aG5CiAgICAgICAgICBpZiAoaWQgPT09ICd0ZW1wZXJhdHVyZScpIHsKICAgICAgICAgICAgdGhhdC5kYXRhVCA9IG9wdGlvbjsKICAgICAgICAgIH0KICAgICAgICAgIGlmIChpZCA9PT0gJ2h1bWlkaXR5JykgewogICAgICAgICAgICB0aGF0LmRhdGFIID0gb3B0aW9uOwogICAgICAgICAgfQogICAgICAgICAgaWYgKGlkID09PSAnaWxsdW1pbmF0aW9uJykgewogICAgICAgICAgICB0aGF0LmRhdGFMID0gb3B0aW9uOwogICAgICAgICAgfQ0KCQkJCQkvLyDnu5jliLblm77ooagKICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["History.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"History.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"nullview\"></div>\n    <van-form>\n      <van-field\n        v-model=\"dataNum\"\n        center\n        label=\"数据数量\"\n        clearable\n        placeholder=\"1 ~ 330\"\n        :rules=\"[{ pattern, message: '请输入正确的数字', trigger: 'onBlur' }]\"\n      >\r\n\t\t\t\t<template #button>\r\n\t\t\t\t\t<van-button size=\"small\" type=\"primary\" @click=\"selectData\"\r\n\t\t\t\t\t\t>查询</van-button\r\n\t\t\t\t\t>\r\n\t\t\t\t</template>\n      </van-field>    \n    </van-form>\n    <van-tabs color=\"#888686\" @click=\"tabClick\">\n      <van-tab title=\"温度\">\n        <div class=\"line\">\n          <div id=\"main\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"湿度\">\n        <div class=\"line\">\n          <div id=\"main1\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n      <van-tab title=\"光照强度\">\n        <div class=\"line\">\n          <div id=\"main2\" style=\"width: 100%; height: 400px\"></div>\n        </div>\n      </van-tab>\n    </van-tabs>\n  </div>\n</template>\n\n<script>\nlet echarts = require('echarts'); // 加载echarts\nlet devicesid = '624519850'; // 设备id\nlet apikey = '2oc6=0XgNsKFW8XVsGcpSJmdlL0='; // oneNetApi的key\nlet api = new OneNetApi(apikey); //读取设备获取多个数据流。\n\nexport default {\n  created() {\n    // 获取数据节点，通过组件id来锁定获取哪个数据项\n    this.getCharts('temperature', '温度', '#F60', 'main');\n  },\n  data() {\n    return {\n      flag: true,\n      flag1: true,\n      value: '2021-05-01',\n      dataNum: '',\n      limit: 6000,\n      startTime: '2020-12-30T08:00:35',\n      dataL: {},\n      dataH: {},\n      dataT: {},\n      pattern: /^([1-9][0-9]|[1-2][0-9][0-9]|[3][0-2][0-9]|330)$/\n    };\n  },\n  mounted() {},\n  methods: {\r\n\t\t// 设置响应组件函数，判断当前是选择根据哪个参数跑数据图。\n    tabClick(title) {\n      if (title === 1 && this.flag) {\n        this.flag = !this.flag;\n        this.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      } else if (title === 2 && this.flag1) {\n        this.flag1 = !this.flag1;\n        // 获取光照度的数据节点\n        this.getCharts('illumination', '光照强度', '#19c509', 'main2');\n      }\n    },\n    selectData() {\n      // 查询按钮\n      const that = this;\n      const dataNums = Number(that.dataNum);\n      that.limit = dataNums;\n      that.getCharts('temperature', '温度', '#F60', 'main');\n      that.getCharts('humidity', '湿度', '#1be0e0', 'main1');\n      that.getCharts('illumination', '光照强度', '#19c509', 'main2');\n    },\n    getCharts(id, title, color, who) {\n      // 实例化图表\n      const that = this;\r\n\t\t\t// 通过oneNetApi获取数据\n      api.getDataPoints(devicesid, {\n          datastream_id: id,\n          start: that.startTime,\n          limit: that.limit\n        })\n        .done(function(data) {\n          console.log('api调用完成，服务器返回data为：', data);\r\n\t\t\t\t\t// 对数据进行处理\n          const tdatatime = [];\n          const tvalue = [];\n          const datas = data.data.datastreams[0].datapoints;\n          for (const i in datas) {\n            datas[i].at = datas[i].at.slice(5, -4); // 去掉时间，保留日期\n            tdatatime.push(datas[i].at);\n            tvalue.push(datas[i].value);\n          }\n          // const echarts = require(\"echarts\");\n          // 基于准备好的dom，初始化echarts实例\n          const myChart = echarts.init(document.getElementById(who));\n          // 指定图表的配置项和数据。\n          const option = {\n            legend: {\n              data: [title]\n            },\n            tooltip: {},\n            toolbox: {\n              feature: {\n                // 动态类型切换,切换图表，我这里设置直方图和折线图。\n                magicType: {\n                  type: ['line', 'bar']\n                },\n                // 数据视图工具，可以展现当前图表所用的数据，编辑后可以动态更新。\n                dataView: {\n                  show: true, // 是否显示 数据示图\n                  readOnly: false // 是否 直接可以编辑数据。\n                },\n                // 保存为图片的配置\n                saveAsImage: {\n                  show: true\n                },\n                // 配置项还原\n                restore: { show: true }\n              }\n            },\n            xAxis: [\n              {\n                data: tdatatime,\n                // 字数超过n个时省略\n                axisLabel: {\n                  formatter: function(value, index) {\n                    const v = value.substring(0, 5) + '...';\n                    return value.length > 5 ? v : value;\n                  }\n                }\n              }\n            ],\n            yAxis: {},\n            series: [\n              {\n                name: title,\n                type: 'line',\n                data: tvalue,\n                itemStyle: {\n                  // 图形的颜色。默认指向全局的option.color\n                  color: color\n                }\n              }\n            ]\n          };\r\n\t\t\t\t\t// 根据不同的选项来设置不同的数据项\n          if (id === 'temperature') {\n            that.dataT = option;\n          }\n          if (id === 'humidity') {\n            that.dataH = option;\n          }\n          if (id === 'illumination') {\n            that.dataL = option;\n          }\r\n\t\t\t\t\t// 绘制图表\n          myChart.setOption(option);\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  width: 100%;\n  height: 100%;\n  .nullview {\n    width: 100%;\n    height: 50px;\n  }\n  .line {\n    width: 99%;\n    height: 400px;\n    margin-top: 20px;\n    // color: #888686;\n  }\n}\n</style>\n"]}]}