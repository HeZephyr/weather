{"remainingRequest":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\HomeData.vue?vue&type=style&index=0&id=7031964e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\src\\components\\HomeData.vue","mtime":1641129396609},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pursuit\\Desktop\\Documents\\移动应用开发\\smart-office-design\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kaXZhdXRvewogIG1hcmdpbjogIDEwcHggYXV0byAwIGF1dG87Cn0K"},{"version":3,"sources":["HomeData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA","file":"HomeData.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"nullview\"></div>\n    <div class=\"header-wrapper\">\r\n\t\t\t<div class=\"header-title\">\r\n\t\t\t  <span>当前时间-{{date|formatDateTime}}</span>\r\n\t\t\t</div>\n      <div class=\"header-title\">\n        <span>空气状况-{{ airText }}</span>\n        <span>地区-{{ city }}</span>\n      </div>\n      <div class=\"header-text\">\n        <span>天气状况-{{ win }}:{{ winSpeed }}</span>\n        <span>风力-{{ weather }}</span>\n      </div>\n      <div class=\"weather-advice\">{{ weatherAdvice }}</div>\n    </div>\n    <div class=\"body-wrapper\">\n      <div class=\"body\">\n        <div class=\"data-wrapper\">\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/wendu.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">温度</div>\n              <div class=\"data-value\">{{ tem }}℃</div>\n            </div>\n          </div>\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/shidu.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">湿度</div>\n              <div class=\"data-value\">{{ hum }}%</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"data-wrapper\">\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/guang.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">光照度</div>\n              <div class=\"data-value\">{{ lux }}lux</div>\n            </div>\n          </div>\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/wled.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">客厅灯</div>\n              <div class=\"data-value\" id=\"dialog\">\n                <van-switch\n                  v-model=\"kled\"\n                  @change=\"kledchange\"\n                  active-color=\"#95EC69\"\n                  inactive-color=\"#dcdee0\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"data-wrapper\">\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/woled.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">卧室灯</div>\n              <div class=\"data-value\">\n                <van-switch\n                  v-model=\"bled\"\n                  @change=\"bledchange\"\n                  active-color=\"#95EC69\"\n                  inactive-color=\"#dcdee0\"\n                />\n              </div>\n            </div>\n          </div>\n          <div class=\"data\">\n            <img class=\"data-logo\" src=\"../static/images/feng.png\" />\n            <div class=\"data-text\">\n              <div class=\"data-title\">风扇</div>\n              <div class=\"data-value\">\n                <van-switch\n                  v-model=\"feng\"\n                  @change=\"fledchange\"\n                  active-color=\"#95EC69\"\n                  inactive-color=\"#dcdee0\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n   \r\n  //在月份、日期、小时等小于10前面补0\r\n  let padDate = function (value) {\r\n    return value <10 ? '0' + value:value;\r\n  };\r\n   \r\n  let formatDateTime = value => {\r\n    var date = new Date(value);\r\n    var year = date.getFullYear();\r\n    var month = padDate(date.getMonth()+1);\r\n    var day = padDate(date.getDate());\r\n    var hours = padDate(date.getHours());\r\n    var minutes = padDate(date.getMinutes());\r\n    var seconds = padDate(date.getSeconds());\r\n    console.log(1111111111111111111111)\r\n    return year + '-' + month + '-' + day + '-' + ' ' + hours + ':' + minutes + ':' + seconds;\r\n  }\n  var myData = {\n    date:new Date()\n  };\n  //在月份、日期、小时等小于10前面补0\n /* var padDate = function (value) {\n    return value <10 ? '0' + value:value;\n  };*/\n  export default {\n    data(){\n      return {\n        date:new Date()\n \n      }\n    },\n    //实例创建完成后调用，此阶段完成了数据的观测等，但尚未挂载，$el 还不可用。需要初始化处理一些数据时会比较有用\n    created:function () {\n \n    },\n    //el挂载到实例上后调用，一般我们的第一个业务逻辑会在这里开始\n    mounted:function () {\n      var _this = this;  //声明一个变量指向Vue实例this，保证作用域一致\n      this.timer = setInterval(function(){\n        _this.date = new Date();  //修改数据date\n      },1000)\n    },\n    //实例销毁之前调用。主要解绑一些使用addEventListener监听的事件等\n    beforeDestroy:function(){\n      if(this.timer){\n        clearInterval(this.timer);  //在Vue实例销毁前，清除我们的定时器\n      }\n    }\n \n  }\n</script>\n<style scoped>\n  .divauto{\n    margin:  10px auto 0 auto;\n  }\n</style>\n \n<script>\nexport default {\n  created() {\n    const that = this;\n    const mykey = '161cff18337a40f7a811b267a8727712';\n    // 从onenet平台获取数据\n    const api = new OneNetApi(that.apikey);\n    api.getDataStreams(that.devicesid).done(function(data) {\n      // console.log('数据请求成功，服务器返回data为：', data);\n      const tempdatas = data.data[0];\n      const humdatas = data.data[1];\n      const luxdatas = data.data[2];\n      // vue写法\n      that.tem = tempdatas.current_value;\n      that.hum = humdatas.current_value;\n      that.lux = parseInt(luxdatas.current_value);\n    });\r\n\t\t// 配置高德地图api\n    that.$AMapLoader\n      .load({\r\n\t\t\t\t// 申请好的Web端开发者Key，首次调用 load 时必填\n        // key: '64f66e310c58fdc368787ace68723ddd', \r\n\t\t\t\tkey: '3ae9903084c3f2b25ced018c9be8c911',\n        version: '1.4.15', // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n        plugins: [], // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n        AMapUI: {\n          // 是否加载 AMapUI，缺省不加载\n          version: '1.1', // AMapUI 缺省 1.1\n          plugins: [] // 需要加载的 AMapUI ui插件\n        },\n        Loca: {\n          // 是否加载 Loca， 缺省不加载\n          version: '1.3.2' // Loca 版本，缺省 1.3.2\n        }\n      })\n      .then((AMap) => {\n        // const map = new AMap.Map('container', {\n        //   resizeEnable: true\n        // })\n        AMap.plugin('AMap.Geolocation', function() {\n          const geolocation = new AMap.Geolocation({\n            enableHighAccuracy: false, // 是否使用高精度定位，默认:true\n            timeout: 10000 // 超过10秒后停止定位，默认：5s\n          });\n          geolocation.getCurrentPosition(function(status, result) {\n            if (status === 'complete') {\n              // console.log(result);\n              // console.log(result.position.lat);\n              const longitude = result.position.lng; // 获取到的经度\n              const latitude = result.position.lat; // 获取到的纬度\n              that\n                .$axios({\n                  url: `https://geoapi.heweather.net/v2/city/lookup?location=${longitude},${latitude}&key=${mykey}`, // 和风天气api\n                  method: 'get'\n                })\n                .then((res) => {\n                  const cityid = res.data.location[0].id;\n                  that\n                    .$axios({\n                      url: `https://v0.yiketianqi.com/api?version=v61&appid=31143983&appsecret=VisL2wEO&cityid=${cityid}`, // 天气api\n                      method: 'get'\n                    })\n                    .then((res) => {\n                      //   console.log('wether',res)\n                      that.city = res.data.city;\n                      that.airText = res.data.air_level;\n                      that.airValue = res.data.air;\n                      that.weather = res.data.wea;\n                      that.weatherAdvice = res.data.air_tips;\n                      that.win = res.data.win;\n                      that.winSpeed = res.data.win_speed;\n                    });\n                });\n            } else {\n              console.log('高德地图使用失败');\n            }\n          });\n        });\n      })\n      .catch((e) => {\n        console.log('高德地图', e);\n      });\n  },\n  data() {\n    return {\n      devicesid: '624519850', // 设备id\n      apikey: '2oc6=0XgNsKFW8XVsGcpSJmdlL0=', // 该设备的apikey\n      // 请求结果返回的数据\n\n      city: '请求中', // 城市\n      airText: '请求中', // 空气优良\n      airValue: '', // 空气指数\n      weather: '请求中', // 天气\n      weatherAdvice: '请求中', // 天气建议\n      win: '请求中', // 风向\n      winSpeed: '请求中', // 风力等级\n      tem: '', // 温度\n      hum: '', // 湿度\n      lux: '', // 光照强度\n\n      // switch开关默认状态\n      kled: false,\n      bled: false,\n      feng: false\n    };\n  },\n  methods: {\n    kledchange() {\n      const that = this;\r\n\t\t\t// 基于OneNetApi，控制办公设备。\n      const api = new OneNetApi(that.apikey);\n      if (that.kled) {\n        api.sendCommand(that.devicesid, '111').done(function(data) {\n          // console.log('api调用完成，服务器返回data为：', data);\n          if (data.errno === 10) {\n            that.$dialog.alert({\n              message: '设备不在线'\n            });\n            that.kled = false;\n          } else {\n            that.$toast.success('打开成功');\n          }\n        });\n      } else {\n        api.sendCommand(that.devicesid, '110').done(function(data) {\n          that.$toast.success('关闭成功');\n        });\n      }\n    },\n    // 控制卧室灯开关\n    bledchange() {\n      const that = this;\n      const api = new OneNetApi(that.apikey);\n      if (that.bled) {\n        api.sendCommand(that.devicesid, '121').done(function(data) {\n          // console.log('api调用完成，服务器返回data为：', data);\n          if (data.errno === 10) {\n            that.$dialog.alert({\n              message: '设备不在线'\n            });\n            that.bled = false;\n          } else {\n            that.$toast.success('打开成功');\n          }\n        });\n      } else {\n        api.sendCommand(that.devicesid, '120').done(function(data) {\n          that.$toast.success('关闭成功');\n        });\n      }\n    },\n    // 控制风扇开关\n    fledchange() {\n      const that = this;\n      const api = new OneNetApi(that.apikey);\n      if (that.feng) {\n        api.sendCommand(that.devicesid, '131').done(function(data) {\n          // console.log('api调用完成，服务器返回data为：', data);\n          if (data.errno === 10) {\n            that.$dialog.alert({\n              message: '设备不在线'\n            });\n            that.feng = false;\n          } else {\n            that.$toast.success('打开成功');\n          }\n        });\n      } else {\n        console.log('在OFF的状态下');\n        api.sendCommand(that.devicesid, '130').done(function(data) {\n          // console.log('api调用完成，服务器返回data为：', data);\n          if (data.errno !== 10) {\n            that.$toast.success('关闭成功');\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.wrapper {\n  height: 600px;\n  padding: 15px;\n  .nullview {\n    height: 30px;\n    width: 100%;\n  }\n  .header-wrapper {\n    height: 28%;\n    background: linear-gradient(to top, #b9bb99, #115b7e, #06435f);\n    border-radius: 20px;\n    color: #fff;\n    box-shadow: #d6d6d6 0px 0px 5px;\n    padding: 15px 30px;\n    .header-title {\n      font-size: 22px;\n      display: flex;\n      justify-content: space-between;\n    }\n    .header-text {\n      margin-top: 10px;\n      font-size: 22px;\n      font-weight: 400;\n      display: flex;\n      justify-content: space-between;\n    }\n    .weather-advice {\n      margin-top: 15px;\n      font-size: 18px;\n    }\n  }\n  .data-wrapper {\n    height: 20%;\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-between;\n    .data {\n      background-color: #fff;\n      width: 43%;\n      height: 80px;\n      border-radius: 20px;\n      display: flex;\n      justify-content: space-around;\n      padding: 0 8px;\n      box-shadow: #d6d6d6 0px 0px 5px;\n      .data-logo {\n        height: 45px;\n        width: 40px;\n        margin-top: 15px;\n      }\n      .data-text {\n        margin-top: 10px;\n        color: #7f7f7f;\n        text-align: center;\n        .data-value {\n          margin-top: 5px;\n          font-size: 18px;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}